/*
 * Copyright Amadeus
 */
/**
 * Transport class for IFrame.
 */
Aria.classDefinition({
	$classpath : "aria.core.transport.IFrame",
	$singleton : true,
	$implements : ["aria.core.transport.ITransports"],
	$constructor : function () {
		/**
		 * Tells if the transport object is ready or requires an initialization phase
		 * @type Boolean
		 */
		this.isReady = true;
	},
	$prototype : {
		/**
		 * Initialization function. Not needed because this transport is ready at creation time
		 */
		init : function () {},

		/**
		 * Perform a request.
		 * @return {Object} connection object
		 */
		request : function () {
			var request = this._getRequest(arguments);
			this._createIFrame(request);
			this._submitForm(request);
		},

		/**
		 * A helper method to create a request object from the arguments array.
		 * @param {Array} args
		 * @return {Object} request object extracted from the arguments array.
		 * @protected
		 */
		_getRequest : function (args) {
			return {
				reqId : args[0],
				method : args[1],
				url : args[2],
				callback : args[3],
				postData : args[4],
				form : args[5]
			};
		},

		/**
		 * Updates the form to target the iframe then calls the forms submit method.
		 * @param {Object} request generated by this._getRequest
		 * @protected
		 */
		_submitForm : function (request) {
			var form = request.form;
			form.target = "xIFrame" + request.reqId;
			form.action = request.url;
			form.method = request.method;
			form.submit();
		},

		/**
		 * Use an iFrame to load the content of a request.
		 * @param {Object} request generated by this._getRequest
		 * @protected
		 */
		_createIFrame : function (request) {
			var iFrame;
			var isIE7 = aria.core.Browser.isIE7;
			var document = Aria.$frameworkWindow.document;

			// Issue when using document.createElement("iframe") in IE7
			if (isIE7) {
				var container = document.createElement("div");
				container.innerHTML = '<iframe style="display:none" src="'
						+ aria.core.DownloadMgr.resolveURL("aria/core/transport/iframeSource.txt") + '" id="xIFrame'
						+ request.reqId + '" name="xIFrame' + request.reqId + '"></iframe>'
				document.body.appendChild(container);
				iFrame = document.getElementById("xIFrame" + request.reqId);
			} else {
				iFrame = document.createElement("iframe");
				iFrame.src = aria.core.DownloadMgr.resolveURL("aria/core/transport/iframeSource.txt");
				iFrame.id = iFrame.name = "xIFrame" + request.reqId;
				iFrame.style.cssText = "display:none";
			}

			// Event handlers
			iFrame.onload = iFrame.onreadystatechange = function (event, isAbort) {
				if (isAbort || !iFrame.readyState || /loaded|complete/.test(iFrame.readyState)) {
					// Memory leak
					iFrame.onload = iFrame.onreadystatechange = null;

					var text, contentDocument = (iFrame.contentDocument), contentWindow = (iFrame.contentWindow);

					if (contentDocument) {
						text = contentDocument;
					} else if (contentWindow) {
						text = contentWindow;
					}

					// Remove the iframe
					if (isIE7) {
						document.body.removeChild(container);
					} else if (iFrame.parentNode) {
						document.body.removeChild(iFrame);
					}
					iFrame = undefined;
					// Callback if not abort
					aria.core.IO._handleTransactionResponse({
						conn : {
							status : 0,
							responseText : text,
							getAllResponseHeaders : function () {}
						},
						transaction : request.reqId
					}, request.callback, isAbort);
				}
			};
			if (!isIE7) {
				document.body.appendChild(iFrame);
			}
		}
	}
});